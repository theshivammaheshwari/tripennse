{"ast":null,"code":"import React,{useState}from\"react\";import\"./App.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[people,setPeople]=useState([]);const[expenses,setExpenses]=useState([]);const[newPerson,setNewPerson]=useState(\"\");const[payer,setPayer]=useState(\"\");const[item,setItem]=useState(\"\");const[amount,setAmount]=useState(\"\");const[selectedUsers,setSelectedUsers]=useState([]);const addPerson=()=>{if(newPerson.trim()!==\"\"&&!people.includes(newPerson)){setPeople([...people,newPerson.trim()]);setNewPerson(\"\");}};const handleUserSelection=name=>{setSelectedUsers(prev=>prev.includes(name)?prev.filter(u=>u!==name):[...prev,name]);};const addExpense=()=>{if(!payer||!item||!amount||selectedUsers.length===0)return;setExpenses([...expenses,{payer,item,amount:parseFloat(amount),sharedAmong:selectedUsers}]);setPayer(\"\");setItem(\"\");setAmount(\"\");setSelectedUsers([]);};const calculateIndividualExpenses=()=>{let individualExpenses={};people.forEach(person=>{individualExpenses[person]={paid:0,commonShare:0,exclusiveShare:0};});expenses.forEach(_ref=>{let{payer,amount,sharedAmong}=_ref;individualExpenses[payer].paid+=amount;let splitAmount=amount/sharedAmong.length;sharedAmong.forEach(user=>{if(user===payer){individualExpenses[user].commonShare+=splitAmount;}else{individualExpenses[user].commonShare+=splitAmount;}});});return people.map(person=>{let totalShare=individualExpenses[person].commonShare+individualExpenses[person].exclusiveShare;let netAmount=individualExpenses[person].paid-totalShare;return{name:person,paid:individualExpenses[person].paid,commonShare:individualExpenses[person].commonShare,exclusiveShare:individualExpenses[person].exclusiveShare,totalShare,netAmount};});};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Trip Expense Tracker\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Add People\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newPerson,onChange:e=>setNewPerson(e.target.value),placeholder:\"Enter Name\"}),/*#__PURE__*/_jsx(\"button\",{onClick:addPerson,children:\"Add Person\"}),/*#__PURE__*/_jsx(\"ul\",{children:people.map((person,index)=>/*#__PURE__*/_jsx(\"li\",{children:person},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Add Expense\"}),/*#__PURE__*/_jsxs(\"select\",{value:payer,onChange:e=>setPayer(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Payer\"}),people.map((person,index)=>/*#__PURE__*/_jsx(\"option\",{value:person,children:person},index))]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter Item\",value:item,onChange:e=>setItem(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Enter Amount\",value:amount,onChange:e=>setAmount(e.target.value)}),/*#__PURE__*/_jsx(\"div\",{className:\"checkbox-group\",children:people.map((person,index)=>/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:selectedUsers.includes(person),onChange:()=>handleUserSelection(person)}),person]},index))}),/*#__PURE__*/_jsx(\"button\",{onClick:addExpense,children:\"Add Expense\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"table-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Expenses Table\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Payer\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Item\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Amount\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Shared Among\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:expenses.map((exp,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:exp.payer}),/*#__PURE__*/_jsx(\"td\",{children:exp.item}),/*#__PURE__*/_jsxs(\"td\",{children:[\"\\u20B9\",exp.amount.toFixed(2)]}),/*#__PURE__*/_jsx(\"td\",{children:exp.sharedAmong.join(\", \")})]},index))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"table-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Individual Expenses\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Diya Gaya Paisa\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Common Items Share\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Exclusive Items Share\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total Share\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Net Amount\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:calculateIndividualExpenses().map((person,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:person.name}),/*#__PURE__*/_jsxs(\"td\",{children:[\"\\u20B9\",person.paid.toFixed(2)]}),/*#__PURE__*/_jsxs(\"td\",{children:[\"\\u20B9\",person.commonShare.toFixed(2)]}),/*#__PURE__*/_jsxs(\"td\",{children:[\"\\u20B9\",person.exclusiveShare.toFixed(2)]}),/*#__PURE__*/_jsxs(\"td\",{children:[\"\\u20B9\",person.totalShare.toFixed(2)]}),/*#__PURE__*/_jsxs(\"td\",{style:{color:person.netAmount>=0?\"green\":\"red\"},children:[\"\\u20B9\",person.netAmount.toFixed(2)]})]},index))})]})]})]});};export default App;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","App","people","setPeople","expenses","setExpenses","newPerson","setNewPerson","payer","setPayer","item","setItem","amount","setAmount","selectedUsers","setSelectedUsers","addPerson","trim","includes","handleUserSelection","name","prev","filter","u","addExpense","length","parseFloat","sharedAmong","calculateIndividualExpenses","individualExpenses","forEach","person","paid","commonShare","exclusiveShare","_ref","splitAmount","user","map","totalShare","netAmount","className","children","type","value","onChange","e","target","placeholder","onClick","index","checked","exp","toFixed","join","style","color"],"sources":["/Users/shivammaheshwari/Documents/GitHub/try/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n    const [people, setPeople] = useState([]);\n    const [expenses, setExpenses] = useState([]);\n    const [newPerson, setNewPerson] = useState(\"\");\n    const [payer, setPayer] = useState(\"\");\n    const [item, setItem] = useState(\"\");\n    const [amount, setAmount] = useState(\"\");\n    const [selectedUsers, setSelectedUsers] = useState([]);\n\n    const addPerson = () => {\n        if (newPerson.trim() !== \"\" && !people.includes(newPerson)) {\n            setPeople([...people, newPerson.trim()]);\n            setNewPerson(\"\");\n        }\n    };\n\n    const handleUserSelection = (name) => {\n        setSelectedUsers((prev) =>\n            prev.includes(name) ? prev.filter((u) => u !== name) : [...prev, name]\n        );\n    };\n\n    const addExpense = () => {\n        if (!payer || !item || !amount || selectedUsers.length === 0) return;\n\n        setExpenses([...expenses, {\n            payer,\n            item,\n            amount: parseFloat(amount),\n            sharedAmong: selectedUsers,\n        }]);\n\n        setPayer(\"\");\n        setItem(\"\");\n        setAmount(\"\");\n        setSelectedUsers([]);\n    };\n\n    const calculateIndividualExpenses = () => {\n        let individualExpenses = {};\n        people.forEach((person) => {\n            individualExpenses[person] = {\n                paid: 0,\n                commonShare: 0,\n                exclusiveShare: 0,\n            };\n        });\n\n        expenses.forEach(({ payer, amount, sharedAmong }) => {\n            individualExpenses[payer].paid += amount;\n            let splitAmount = amount / sharedAmong.length;\n            sharedAmong.forEach((user) => {\n                if (user === payer) {\n                    individualExpenses[user].commonShare += splitAmount;\n                } else {\n                    individualExpenses[user].commonShare += splitAmount;\n                }\n            });\n        });\n\n        return people.map((person) => {\n            let totalShare =\n                individualExpenses[person].commonShare +\n                individualExpenses[person].exclusiveShare;\n            let netAmount = individualExpenses[person].paid - totalShare;\n            return {\n                name: person,\n                paid: individualExpenses[person].paid,\n                commonShare: individualExpenses[person].commonShare,\n                exclusiveShare: individualExpenses[person].exclusiveShare,\n                totalShare,\n                netAmount,\n            };\n        });\n    };\n\n    return (\n        <div className=\"container\">\n            <h1>Trip Expense Tracker</h1>\n\n            {/* Add People Section */}\n            <div className=\"section\">\n                <h2>Add People</h2>\n                <input\n                    type=\"text\"\n                    value={newPerson}\n                    onChange={(e) => setNewPerson(e.target.value)}\n                    placeholder=\"Enter Name\"\n                />\n                <button onClick={addPerson}>Add Person</button>\n                <ul>\n                    {people.map((person, index) => (\n                        <li key={index}>{person}</li>\n                    ))}\n                </ul>\n            </div>\n\n            {/* Add Expense Section */}\n            <div className=\"section\">\n                <h2>Add Expense</h2>\n                <select value={payer} onChange={(e) => setPayer(e.target.value)}>\n                    <option value=\"\">Select Payer</option>\n                    {people.map((person, index) => (\n                        <option key={index} value={person}>{person}</option>\n                    ))}\n                </select>\n                <input type=\"text\" placeholder=\"Enter Item\" value={item} onChange={(e) => setItem(e.target.value)} />\n                <input type=\"number\" placeholder=\"Enter Amount\" value={amount} onChange={(e) => setAmount(e.target.value)} />\n                <div className=\"checkbox-group\">\n                    {people.map((person, index) => (\n                        <label key={index}>\n                            <input\n                                type=\"checkbox\"\n                                checked={selectedUsers.includes(person)}\n                                onChange={() => handleUserSelection(person)}\n                            />\n                            {person}\n                        </label>\n                    ))}\n                </div>\n                <button onClick={addExpense}>Add Expense</button>\n            </div>\n\n            {/* Expenses Table */}\n            <div className=\"table-section\">\n                <h2>Expenses Table</h2>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Payer</th>\n                            <th>Item</th>\n                            <th>Amount</th>\n                            <th>Shared Among</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {expenses.map((exp, index) => (\n                            <tr key={index}>\n                                <td>{exp.payer}</td>\n                                <td>{exp.item}</td>\n                                <td>₹{exp.amount.toFixed(2)}</td>\n                                <td>{exp.sharedAmong.join(\", \")}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n\n            {/* Individual Expenses Table */}\n            <div className=\"table-section\">\n                <h2>Individual Expenses</h2>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Diya Gaya Paisa</th>\n                            <th>Common Items Share</th>\n                            <th>Exclusive Items Share</th>\n                            <th>Total Share</th>\n                            <th>Net Amount</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {calculateIndividualExpenses().map((person, index) => (\n                            <tr key={index}>\n                                <td>{person.name}</td>\n                                <td>₹{person.paid.toFixed(2)}</td>\n                                <td>₹{person.commonShare.toFixed(2)}</td>\n                                <td>₹{person.exclusiveShare.toFixed(2)}</td>\n                                <td>₹{person.totalShare.toFixed(2)}</td>\n                                <td style={{ color: person.netAmount >= 0 ? \"green\" : \"red\" }}>\n                                    ₹{person.netAmount.toFixed(2)}\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}